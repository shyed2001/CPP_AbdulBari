#include<iostream>
#include <vector>
#include <map>
using namespace std;

int main()
{
int A[]={3};
int B[3]={4};
int C[4];
double D[5]={0,1,-2,3.99,4};

cout<<"A = "<<A<<endl;
cout<<"A[0] = "<<A[0]<<endl;
cout<<"A[2] = "<<A[2]<<endl;

cout<<"B = "<<B<<endl;
cout<<"B[0] = "<<B[0]<<endl;
cout<<"B[2] = "<<B[2]<<endl;
cout<<"B[3] = "<<B[3]<<endl;
cout<<"C = "<<C<<endl;
cout<<"C[0] = "<<C[0]<<endl;
cout<<"C[2] = "<<C[2]<<endl;

cout<<"D = "<<D<<endl;
cout<<"D[0] = "<<D[0]<<endl;
cout<<"D[2] = "<<D[2]<<endl;
cout<<"D[3] = "<<D[3]<<endl;

 int aaa[] = {0, 1, 2, 3, 4, 5};
    for (int n : aaa)
        std::cout << n << ' ';

    std::cout << '\n';

    // Just running a loop for every array
    // element
    for (int nnn : aaa)
        std::cout << "In loop" << ' ';

    std::cout << '\n';

    // Printing string characters
    std::string str123 = "Geeks";
    for (char cccc : str123)
        std::cout << cccc << ' ';

    std::cout << '\n';

  // Iterating over whole array
    std::vector<int> v = {0, 1, 2, 3, 4, 5};
    for (auto i : v)  /// auto will automatically pick up the variable type.
        std::cout << i << ' ';

    std::cout << '\n';

    // the initializer may be a braced-init-list
    for (int n : {0, 1, 2, 3, 4, 5})
        std::cout << n << ' ';

    std::cout << '\n';

      // Printing keys and values of a map
    std::map <int, int> MAP({{1, 1}, {2, 2}, {3, 3}});
    for (auto i : MAP)
        std::cout << '{' << i.first << ", "
                  << i.second << "}\n";	return 0;
	    
}





Output:-

A = 0xd82f7ff99c
A[0] = 3
A[2] = 216
B = 0xd82f7ff990
B[0] = 4
B[2] = 0
B[3] = 3
C = 0xd82f7ff980
C[0] = -233295672
C[2] = -233295672
D = 0xd82f7ff950
D[0] = 0
D[2] = -2
D[3] = 3.99
0 1 2 3 4 5
In loop In loop In loop In loop In loop In loop
G e e k s
0 1 2 3 4 5
0 1 2 3 4 5
{1, 1}
{2, 2}
{3, 3}
