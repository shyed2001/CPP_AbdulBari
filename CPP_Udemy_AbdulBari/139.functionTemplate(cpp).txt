# include<iostream>
using namespace std;
    
/*program for function templates */
template<class t>
t maxim(t a,t b)
{
       return a>b?a:b;
///
/*
one line if statement c++
x = condition ? expression1 : expression2

// Example:
double x = (1 > 0) ? 10 : 20; // put any value
Short Hand if-else Methods
There is Short Hand format to code if statements as below

 
variable = (condition) ? true_expression : false_expression;
 
for example same example above can be written as,

 
int a= 5;
string result = (a>3) ? "greater than 3" : "not greater than 3";
std::cout << result;

You can use the if-else shorthand in your program instead of the if-else statement by following the syntax given below:

variable = (condition)? expressionTrue: expressionFalse;
In the above syntax, question marks are part of the code and are used to check whether the condition is true or not. If the condition is true the program will execute the first expression right after the question mark, else the program will execute the second expression.
*/
}
int main()
{
///
/*program for function templates*/
	cout<<maxim(12,14)<<endl;
	cout<<maxim(2.3,1.4)<<endl;
	cout<<maxim(2.3f,5.6f)<<endl;
	return 0;
}